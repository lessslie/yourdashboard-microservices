# ==================================================
# MS-YOURDASHBOARD-ORCHESTRATOR
# ==================================================
# Backend For Frontend (BFF) - Coordina todos los microservicios

# ================================
# Application Settings
# ================================
NODE_ENV=development
PORT=3003

# ================================
# Microservices URLs
# ================================
# URLs de los microservicios que coordina
MS_AUTH_URL=http://localhost:3001
MS_EMAIL_URL=http://localhost:3002
MS_WHATSAPP_URL=http://localhost:3004
MS_CALENDAR_URL=http://localhost:3005  

# ================================
# Frontend & External URLs
# ================================
FRONTEND_URL=http://localhost:3000
ORCHESTRATOR_URL=http://localhost:3003

# ================================
# üéØ CACHE CONFIGURATION - AUTO-M√ÅGICO
# ================================
# üß† MODO MEMORIA (Funciona sin instalar nada - RECOMENDADO para desarrollo)
REDIS_URL=memory

# üöÄ MODO REDIS (Solo si tienes Redis instalado y quieres optimizaci√≥n)
# REDIS_URL=redis://localhost:6379

# üí° INSTRUCCIONES:
# - Por defecto usa MEMORIA (funciona en cualquier computadora)
# - Si quieres Redis para optimizaci√≥n: cambia 'memory' por 'redis://localhost:6379'
# - Para levantar Redis: docker-compose up redis -d

# ================================
# Cache Settings (Opcional)
# ================================
CACHE_TTL_EMAILS=300          # 5 minutos para emails
CACHE_TTL_STATS=600           # 10 minutos para estad√≠sticas
CACHE_TTL_SEARCH=180          # 3 minutos para b√∫squedas

# ================================
# üèÜ INSTRUCCIONES :
# ================================
# 1. Copiar este archivo como .env: cp .env.example .env
# 2. NO TOCAR NADA M√ÅS - funciona autom√°ticamente
# 3. npm run start:dev
# 4. ¬°Listo! El cache funciona en memoria autom√°ticamente
#
# üèÜ CERO CONFIGURACI√ìN NECESARIA